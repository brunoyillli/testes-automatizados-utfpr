package io.github.brunoyillli.calculadoraSalario;

import java.math.BigDecimal;

import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

import io.github.brunoyillli.calculadoraSalario.entity.CargoEnum;
import io.github.brunoyillli.calculadoraSalario.entity.Funcionario;

public class FuncionarioSalarioCalculadoraTest {

	@Test
	public void CalculandoDescontoMaiorDesenvolvedorTest() {
		FuncionarioSalarioCalculadora calculadora = new FuncionarioSalarioCalculadora();
		Funcionario funcionario = new Funcionario("Bruno Mendes", "bruno@utfpr.com", BigDecimal.valueOf(12000),
				CargoEnum.DESENVOLVEDOR);
		BigDecimal salarioDescontadoExperado = BigDecimal.valueOf(9600.0);

		BigDecimal salarioDescontadoAtual = calculadora.calcularDescontoSalario(funcionario);

		Assertions.assertEquals(salarioDescontadoExperado, salarioDescontadoAtual);
	}

	@Test
	public void CalculandoDescontoMenorsDesenvolvedorTest() {
		FuncionarioSalarioCalculadora calculadora = new FuncionarioSalarioCalculadora();
		Funcionario funcionario = new Funcionario("Uziel Sena", "uzi@utfpr.com", BigDecimal.valueOf(2000),
				CargoEnum.DESENVOLVEDOR);
		BigDecimal salarioDescontadoExperado = BigDecimal.valueOf(1800.0);

		BigDecimal salarioDescontadoAtual = calculadora.calcularDescontoSalario(funcionario);

		Assertions.assertEquals(salarioDescontadoExperado, salarioDescontadoAtual);
	}
	
	@Test
	public void CalculandoDescontoMaiorDBATest() {
		FuncionarioSalarioCalculadora calculadora = new FuncionarioSalarioCalculadora();
		Funcionario funcionario = new Funcionario("Mayara", "mayara@utfpr.com", BigDecimal.valueOf(2000),
				CargoEnum.DBA);
		BigDecimal salarioDescontadoExperado = BigDecimal.valueOf(1500.0);

		BigDecimal salarioDescontadoAtual = calculadora.calcularDescontoSalario(funcionario);

		Assertions.assertEquals(salarioDescontadoExperado, salarioDescontadoAtual);
	}
	
	@Test
	public void calculandoDescontoCargoInvalidoExceptionTest() {
		
		 FuncionarioSalarioCalculadora calculadora = new FuncionarioSalarioCalculadora();
	        Funcionario funcionario = new Funcionario("JoÃ£o", "joao@example.com",
	                BigDecimal.valueOf(3000), CargoEnum.CARGO_INVALIDO);

	        Assertions.assertThrows(IllegalArgumentException.class, () -> {
	            calculadora.calcularDescontoSalario(funcionario);
	        });
		
	}
}
